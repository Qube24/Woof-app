{"version":3,"file":"static/js/785.f8e20e52.chunk.js","mappings":"wNAEaA,EAAa,mCAAG,sGACTC,MAAM,uCADG,cACrBC,EADqB,gBAEJA,EAAIC,OAFA,cAErBC,EAFqB,yBAGpBA,GAHoB,2CAAH,qDAQbC,EAAS,mCAAG,WAAMC,GAAN,yFACLL,MAAM,6BAAD,OAA8BK,EAA9B,mBADA,cACjBJ,EADiB,gBAEMA,EAAIC,OAFV,cAEjBI,EAFiB,yBAGhBA,GAHgB,2CAAH,sDAQTC,EAAc,mCAAG,WAAOC,EAAQC,GAAf,yFACVT,MAAM,6BAAD,OACQQ,EADR,YACkBC,EADlB,mBADK,cACtBR,EADsB,gBAIMA,EAAIC,OAJV,cAItBQ,EAJsB,yBAKrBA,GALqB,2CAAH,uD,8ICjB3B,EAA4B,6BAA5B,EAAgE,wBAAhE,EAA+F,wB,SC6C/F,MAzCA,WAEE,OAA0CC,EAAAA,EAAAA,UAAS,IAAnD,eAAOC,EAAP,KAAsBC,EAAtB,MAGAC,EAAAA,EAAAA,YAAU,WAER,IAAMC,EAAkB,mCAAG,qGACQhB,EAAAA,EAAAA,MADR,OACnBgB,EADmB,OAEzBF,EAAiBE,EAAmBC,SAFX,2CAAH,qDAIxBD,GACD,GAAE,IAGH,IAGME,EAHcC,OAAOC,KAAKP,GAGCQ,SAAQ,SAAAC,GAAG,OAC1CT,EAAcS,GAAKC,OAAS,EACxBV,EAAcS,GAAKE,KAAI,SAAAlB,GAAK,gBAAOgB,EAAP,YAAchB,EAAd,IAC5BgB,CAHsC,IAM5C,OACE,4BACE,eAAIG,UAAWC,EAAf,0BACA,eAAID,UAAWC,EAAf,SACGR,EAAaM,KAAI,SAACG,EAAIC,GAAL,OAChB,SAAC,KAAD,CAAMC,GAAE,eAAUF,GAAlB,UACE,eAAgBF,UAAWC,EAA3B,SACGC,GADMC,IADkBA,EADb,OAQpB,SAAC,KAAD,MAGL,C,sBC5CD,SAASE,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChB/B,EAAQgC,EAAKhC,KAInB,CAHE,MAAOiC,GAEP,YADAN,EAAOM,EAET,CAEID,EAAKE,KACPR,EAAQ1B,GAERmC,QAAQT,QAAQ1B,GAAOoC,KAAKR,EAAOC,EAEvC,CAEe,SAASQ,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUT,EAASC,GACpC,IAAIF,EAAMa,EAAGK,MAAMJ,EAAME,GAEzB,SAASb,EAAM5B,GACbwB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQ7B,EAClE,CAEA,SAAS6B,EAAOe,GACdpB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASe,EACnE,CAEAhB,OAAMiB,EACR,GACF,CACF,C","sources":["components/fetchApi.js","webpack://woof-app/./src/pages/Home/homeStyle.module.css?768d","pages/Home/Home.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["// fetch dogs list by breed for home\n\nexport const fetchDogsList = async () => {\n  const res = await fetch('https://dog.ceo/api/breeds/list/all');\n  const dogsJson = await res.json();\n  return dogsJson;\n};\n\n// fetch function to search for dogs with one-part name\n\nexport const fetchDogs = async value => {\n  const res = await fetch(`https://dog.ceo/api/breed/${value}/images/random`);\n  const searchDogsJson = await res.json();\n  return searchDogsJson;\n};\n\n// fetch function to search for dogs with two-part name\n\nexport const fetchBreedDogs = async (value1, value2) => {\n  const res = await fetch(\n    `https://dog.ceo/api/breed/${value1}/${value2}/images/random`\n  );\n  const searchDogsBreedJson = await res.json();\n  return searchDogsBreedJson;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"pageTitle\":\"homeStyle_pageTitle__gWMYU\",\"list\":\"homeStyle_list__wJd8M\",\"link\":\"homeStyle_link__QU4Gb\"};","import { useEffect, useState } from 'react';\nimport { Outlet, Link } from 'react-router-dom';\nimport { fetchDogsList } from 'components/fetchApi';\nimport css from './homeStyle.module.css';\n\nfunction Home() {\n  // hook for setting list of dogs by breed\n  const [dogsListBreed, setDogsListBreed] = useState([]);\n\n  // componentDidMount\n  useEffect(() => {\n    // function for fetching list of dogs by breed\n    const fetchDogsListBreed = async () => {\n      const fetchDogsListBreed = await fetchDogsList();\n      setDogsListBreed(fetchDogsListBreed.message);\n    };\n    fetchDogsListBreed();\n  }, []);\n\n  // variable for changing object to array\n  const ArrayOfDogs = Object.keys(dogsListBreed);\n\n  // function to combine keys with values\n  const fullDataDogs = ArrayOfDogs.flatMap(dog =>\n    dogsListBreed[dog].length > 0\n      ? dogsListBreed[dog].map(value => `${dog} ${value}`)\n      : dog\n  );\n\n  return (\n    <div>\n      <h2 className={css.pageTitle}>Breed Lists</h2>\n      <ul className={css.list}>\n        {fullDataDogs.map((el, index) => (\n          <Link to={`/dog/${el}`} key={index}>\n            <li key={index} className={css.link}>\n              {el}\n            </li>\n          </Link>\n        ))}\n      </ul>\n      <Outlet />\n    </div>\n  );\n}\n\nexport default Home;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["fetchDogsList","fetch","res","json","dogsJson","fetchDogs","value","searchDogsJson","fetchBreedDogs","value1","value2","searchDogsBreedJson","useState","dogsListBreed","setDogsListBreed","useEffect","fetchDogsListBreed","message","fullDataDogs","Object","keys","flatMap","dog","length","map","className","css","el","index","to","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}